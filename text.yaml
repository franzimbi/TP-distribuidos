services:
  distributor:
    build:
      context: .
      dockerfile: distributor/Dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED = 1
    - Q1result=Q1result
    - Q21result=Q21result
    - Q22result=Q22result
    - Q3result=Q3result
    - Q4result=Q4result
    - transactionsExchange=transactionsExchange
    - itemsExchange=itemsExchange
    - productsExchange=productsExchange
    - storesExchange=storesExchange
    - usersExchange=usersExchange
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterAnio1_1:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=exchange,itemsExchange
    - queueEntrada=entradaFilterAnio1_1
    - tipoSalida=queue
    - queuesSalida=Queue_begin2_1,Queue_begin2_2
    - queue_to_send_coordinator=coodinator_Anio1_unique_queue
    - queue_to_receive_coordinator=filterAnio1_1_receive_from_coordinator_Anio1
    - filter_name=byyear
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterAnio1_2:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=exchange,itemsExchange
    - queueEntrada=entradaFilterAnio1_2
    - tipoSalida=queue
    - queuesSalida=Queue_begin2_1,Queue_begin2_2
    - queue_to_send_coordinator=coodinator_Anio1_unique_queue
    - queue_to_receive_coordinator=filterAnio1_2_receive_from_coordinator_Anio1
    - filter_name=byyear
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  coordinator_Anio1:
    build:
      context: .
      dockerfile: filter/Dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - consume_queue=coodinator_Anio1_unique_queue
    - num_nodes=2
    - queues_to_send_to_nodes=,filterAnio1_1_receive_from_coordinator_Anio1,filterAnio1_2_receive_from_coordinator_Anio1
    - queue_to_send_last_batch=Queue_begin2_1,Queue_begin2_2
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterAnio2_1:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=exchange,transactionExchange
    - queueEntrada=entradaFilterAnio2_1
    - tipoSalida=queue
    - queuesSalida=Queue_begin_4,Queue_begin_3_y_1
    - queue_to_send_coordinator=coodinator_Anio2_unique_queue
    - queue_to_receive_coordinator=filterAnio2_1_receive_from_coordinator_Anio2
    - filter_name=byyear
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterAnio2_2:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=exchange,transactionExchange
    - queueEntrada=entradaFilterAnio2_2
    - tipoSalida=queue
    - queuesSalida=Queue_begin_4,Queue_begin_3_y_1
    - queue_to_send_coordinator=coodinator_Anio2_unique_queue
    - queue_to_receive_coordinator=filterAnio2_2_receive_from_coordinator_Anio2
    - filter_name=byyear
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  coordinator_Anio2:
    build:
      context: .
      dockerfile: filter/Dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - consume_queue=coodinator_Anio2_unique_queue
    - num_nodes=2
    - queues_to_send_to_nodes=,filterAnio2_1_receive_from_coordinator_Anio2,filterAnio2_2_receive_from_coordinator_Anio2
    - queue_to_send_last_batch=Queue_begin_4,Queue_begin_3_y_1
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterHora1_1:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=queue,Queue_begin_3_y_1
    - queueEntrada=entradaFilterHora1_1
    - tipoSalida=queue
    - queuesSalida=Queue_3, Queue_1
    - queue_to_send_coordinator=coodinator_Hora1_unique_queue
    - queue_to_receive_coordinator=filterHora1_1_receive_from_coordinator_Hora1
    - filter_name=bytime
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  filterHora1_2:
    build:
      context: .
      dockerfile: filter/Dockerfile
    depends_on:
    - distributor
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - tipoEntrada=queue,Queue_begin_3_y_1
    - queueEntrada=entradaFilterHora1_2
    - tipoSalida=queue
    - queuesSalida=Queue_3, Queue_1
    - queue_to_send_coordinator=coodinator_Hora1_unique_queue
    - queue_to_receive_coordinator=filterHora1_2_receive_from_coordinator_Hora1
    - filter_name=bytime
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
  coordinator_Hora1:
    build:
      context: .
      dockerfile: filter/Dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - consume_queue=coodinator_Hora1_unique_queue
    - num_nodes=2
    - queues_to_send_to_nodes=,filterHora1_1_receive_from_coordinator_Hora1,filterHora1_2_receive_from_coordinator_Hora1
    - queue_to_send_last_batch=Queue_3, Queue_1
    networks:
    - mynet
    volumes:
    - ./config.ini:/app/config.ini
